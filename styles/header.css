.cabecalho__menu-hamburguer {
    width: 24px;
    height: 24px;
    background-image: url(../assets/Menu.svg);
    display: inline-block;
}

.cabecalho {
    background-color: var(--branco);
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: relative;
}

.container {
    display: flex;
    align-items: center;
}

.container__imagen {
    margin: 1rem;
}

.container__botao {
    display: none;
}

/*o display none faz o elemento ficar invisivel, sem ocupar esoaço na tela.
O position: relative nos permite inserir outros atributos como top, left, right e bottom, que são, respectivamente, topo, esquerda, direita e baixo.
Já o position: absolute nos permite movimentar o elemento de acordo com outro que veio antes ou que é o "pai", e que esteja em uma position diferente de "estática", que é a padrão.
Queríamos que a lista se movesse de acordo com o cabeçalho, que ficasse abaixo do cabeçalho. Por isso, inserimos um position: relative no cabeçalho para que ficasse diferente de estática. Não vamos usar nenhuma das propriedades liberadas para ele, mas queremos que ele fique diferente de "estático" para que o position: absolute da lista funcione.
Assim, conseguimos movimentar a lista de acordo com o cabeçalho. Agora, a lista já está acima dele, porque não inserimos mais nada. Mas agora vamos colocá-la abaixo. Para isso, vamos inserir top: 100%.*/
.lista-menu{
    display: none;
    position: absolute;
    top: 100%;
    width: 70vw;
}

/*aqui peguei a classe do checkbox e condicionei ele à lista do menu, de forma que a lista irá aparecer quando o botão for clicado. 
O ~ é um combinador css.
a condiçã oaqio é: se o conteiner botão estiver checked ele procura o proximo elemento, ou seja, a lista, e aplica nela o display block passado*/
.container__botao:checked ~ .lista-menu {
    display: block;
}

.lista-menu__titulo, .lista-menu_item {
    background-color: var(--branco);
    padding: 1rem;
}

.lista-menu__titulo {
    color: var(--laranja);
    font-weight: 700;
    font-size: 1rem;
}

.lista-menu__link {
    text-decoration: none;
    font-size: 1rem;
    color: var(--azul_gradiente);
    text-transform: uppercase;
}

.lista-menu__link:hover {
    color:tomato;
}

.container__titulo {
    display: none;
}

.opcoes {
    display: none;
}

/*media queries - usado para colocar configurações de dsign automatico a depender do tamanho da tela*/

/*sempre que for usar media queria, tem que lembrar de colocar display:none, fora do media, no elemento que não deve ter, e colocar display:block outro), no elemento dentro de mídia, para indicar que, naquela condição, é para ele ser ecxibido!*/

@media screen and (min-width: 1024px) {
    .container__titulo, .container__titulo_negrito {
        font-family: var(--fonte_secundaria);
        font-size: 30px;
    }

    .container__titulo {
        font-weight: 400;
        display: block;
    }

    .container__titulo_negrito {
        font-weight: 700;
    }

    .opcoes {
        display: flex;
    }

    .opcoes__item {
        padding: 1rem;
        text-transform: uppercase;
    }

    .opcoes__link {
        text-decoration: none;
        color: black;
    }

    .container__imagen_transp {
        display: none;
    }

    .cabecalho__menu-hamburguer {
        display: none;
    }

    .opcoes_botao:checked ~ .lista-menu {
        display: block;
        width: auto;
    }

    .opcoes_botao {
        display: none;
    }

}